---
title: "Code Related to Figure 1A"
format: html
editor: visual
---

# QQ-Plots

Here we will generate a quantile-quantile plot of observed p-values and p-values computed from a uniform distribution.


```{r, echo=FALSE}
require(data.table)
require(fishHook)
require(cowplot)


ggqq <- function(ps, symbol, ci = 0.95, splitx=3.5, pcolor) {
    require(ggrepel)
  theme_set(theme_cowplot())
    N  <- length(ps)
    df <- data.frame(
        observed = -log10(sort(ps)),
        expected = -log10(1:N / N),
        clower   = -log10(qbeta(ci,     1:N, N - 1:N + 1)),
        cupper   = -log10(qbeta(1 - ci, 1:N, N - 1:N + 1)),
        symbol   = symbol
    )
    log10Pe <- expression(paste("Expected -log"[10], plain(P)))
    log10Po <- expression(paste("Observed -log"[10], plain(P)))
    ggplot(df, aes(expected,observed,label=symbol)) +
        geom_point(aes(expected, observed), shape = 16, 
                   color = ifelse(pcolor == "", "black", "red")) +
        geom_abline(intercept = 0,
                    slope = 1,
                    alpha = 0.5) +
        geom_line(aes(expected, cupper), linetype = 2) +
        geom_line(aes(expected, clower),
                  linetype = 2,
                  color = 'red') +
        xlab(log10Pe) +
        ylab(log10Po) +
        #coord_cartesian(xlim = c(0, max(df$observed)), ylim=c(0,max(df$observed))) +
        #xlim(0, 4.5) +
        geom_text_repel(
            data = subset(df, (expected > splitx & observed > 1)),
            nudge_x      =  6 - subset(df, (expected > splitx & observed > 1))$expected,
            direction    = "y",
            hjust        = 0,
            max.time = 5, max.iter = 100000,
            segment.size = 0.2) +
        geom_text_repel(
            data = subset(df, (expected <= splitx & observed > 1)),
            nudge_x      =  1 - subset(df, (expected <= splitx & observed > 1 ))$expected,
            direction    = "y",
            nudge_y =  10,
           # nudge_y =  1 + subset(df, (expected <= splitx & observed > 1 ))$observed,
            hjust        = 1,
            max.time = 5, max.iter = 100000,
            segment.size = 0.2)
    #geom_text_repel(size=4,box.padding = 0.25,segment.size = .25,
    #   max.iter = 2000
    #)
}

```



## Read file with FishHook results. 
```{r}
require(data.table)
require(fishHook)

result.df <- fread("./fishHook.results.tsv")




```

## Preview the file

```{r}
result.df
```


## Set FDR thresholds for point color and gene labels, and generate plot.  
```{r}

#result.df[, plotSymbol := ifelse(name=="BTG1", name, "")]    

#result.df[, plotSymbol := ifelse(fdr<=0.001, name, "")]     
result.df$plotSymbol <- ""
result.df$plotSymbol[1:20] <- result.df$name[1:20]
result.df[, plotcolor := ifelse(fdr<=0.001, name, "")]     

ggqq(result.df$p, symbol = result.df$plotSymbol, pcolor = result.df$plotcolor)

```

